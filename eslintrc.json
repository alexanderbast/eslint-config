{
  "parser": "babel-eslint",
  "parserOptions": {
    "ecmaVersion": 8,
    "sourceType": "module",
    "ecmaFeatures": {
      "globalReturn": false,
      "impliedStrict": true,
      "jsx": true,
      "experimentalObjectRestSpread": true
    }
  },
  "env": {
    "es6": true,
    "jest/globals": true
  },
  "extends": [
    "airbnb",
    "plugin:unicorn/recommended",
    "plugin:promise/recommended",
    "plugin:flowtype/recommended",
    "plugin:react-perf/recommended",
    "plugin:react-native/all",
    "plugin:jest/recommended",
    "prettier",
    "prettier/flowtype",
    "prettier/react"
  ],
  "plugins": [
    "fp",
    "unicorn",
    "promise",
    "flowtype",
    "react-perf",
    "react-native",
    "jest"
  ],
  "rules": {
    // ESLINT
    "newline-before-return": "error",
    // FUNCTIONAL PROGRAMMING
    "fp/no-arguments": "error",
    "fp/no-delete": "error",
    "fp/no-get-set": "error",
    "fp/no-let": "warn",
    "fp/no-loops": "error",
    "fp/no-mutating-assign": "error",
    "fp/no-mutating-methods": "error",
    "fp/no-mutation": [
      "warn",
      {
        "commonjs": false,
        "allowThis": true,
        "exceptions": []
      }
    ],
    "fp/no-valueof-field": "error",
    // UNICORN
    "unicorn/filename-case": "off", // because of react-native
    // PROMISES
    "promise/prefer-await-to-then": "error",
    "promise/prefer-await-to-callbacks": "error",
    // FLOWTYPE
    "flowtype/define-flow-type": "error",
    "flowtype/delimiter-dangle": [
      "error",
      "never"
    ],
    "flowtype/no-dupe-keys": "error",
    "flowtype/no-primitive-constructor-types": "error",
    "flowtype/no-weak-types": [
      "error",
      {
        "any": true,
        "Object": false,
        "Function": true
      }
    ],
    "flowtype/object-type-delimiter": [
      "error",
      "comma"
    ],
    "flowtype/require-parameter-type": "error",
    "flowtype/require-return-type": [
      "error",
      "always",
      {
        "annotateUndefined": "always"
      }
    ],
    "flowtype/semi": [
      "error",
      "always"
    ],
    // REACT
    "react/jsx-filename-extension": [
      "warn",
      {
        "extensions": [
          ".js",
          ".jsx"
        ]
      }
    ] // because of react-native
  }
}
